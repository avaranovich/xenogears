Detected the "/verbose" switch, entering verbose mode.

Command line args are: (2 args)
1: Libptx
2: -name:libptx

Pre-parsing arguments...
Parsed "Libptx" as raw value.
Parsed "-name:libptx" as name/value pair: name => "libptx".
Pre-parse completed: found 1 named argument and 1 shortcut argument.

Parsing arguments...
Parsing named arguments...
Resolving argument "name"...
Resolved argument "name" as: String Config::ProjectName { get; set; }...
Parsing name => "libptx" as System.String...
Parsed name => "libptx" as: libptx.
Validating libptx with bool Config::ValidateProjectName(String name)...
Validated libptx as suitable for String Config::ProjectName { get; set; }.
Parsing shortcut arguments...
Considering shortcut schema ""...
Schema "" won't work: argument count mismatch.
Considering shortcut schema "name"...
Resolving argument "name"...
Resolved argument "name" as: String Config::ProjectName { get; set; }...
Parsing name => "Libptx" as System.String...
Parsed name => "Libptx" as: Libptx.
Validating Libptx with bool Config::ValidateProjectName(String name)...
Validated Libptx as suitable for String Config::ProjectName { get; set; }.
Schema "name" won't work: shortcut argument duplicates parsed argument "name".
Considering shortcut schema "target"...
Resolving argument "target"...
Resolved argument "target" as: DirectoryInfo Config::TargetDir { get; set; }...
Parsing target => "Libptx" as System.IO.DirectoryInfo...
Parsed target => "Libptx" as: dir: d:\Projects\Active\XenoGears\XenoGears.Playground\bin\Debug\Libptx.
Schema "target" works fine, skipping other schemas (if any).
Parse completed.

Setting configuration parameters...
Resolved %ProjectName as libptx.
Defaulted %TemplateName to lite.
Defaulted %VcsName to hg.
Defaulted %VcsRepo to <null>.
Resolved %TargetDir as dir: d:\Projects\Active\XenoGears\XenoGears.Playground\bin\Debug\Libptx.
Configuration parameters successfully set.

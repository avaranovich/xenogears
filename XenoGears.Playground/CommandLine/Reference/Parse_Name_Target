Detected the "/verbose" switch, entering verbose mode.

Command line args are: (2 args)
1: libptx
2: d:\Projects\Active\Libptx\

Pre-parsing arguments...
Parsed "libptx" as raw value.
Parsed "d:\Projects\Active\Libptx\" as raw value.
Pre-parse completed: found 0 named arguments and 2 shortcut arguments.

Parsing arguments...
Parsing shortcut arguments...
Considering shortcut schema ""...
Schema "" won't work: argument count mismatch.
Considering shortcut schema "name"...
Schema "name" won't work: argument count mismatch.
Considering shortcut schema "target"...
Schema "target" won't work: argument count mismatch.
Considering shortcut schema "name target"...
Resolving argument "name"...
Resolved argument "name" as: String Config::ProjectName { get; set; }...
Parsing name => "libptx" as System.String...
Parsed name => "libptx" as: libptx.
Validating libptx with bool Config::ValidateProjectName(String name)...
Validated libptx as suitable for String Config::ProjectName { get; set; }.
Resolving argument "target"...
Resolved argument "target" as: DirectoryInfo Config::TargetDir { get; set; }...
Parsing target => "d:\Projects\Active\Libptx\" as System.IO.DirectoryInfo...
Parsed target => "d:\Projects\Active\Libptx\" as: dir: d:\Projects\Active\Libptx\.
Schema "name target" works fine, skipping other schemas (if any).
Parse completed.

Setting configuration parameters...
Resolved %ProjectName as libptx.
Defaulted %TemplateName to lite.
Defaulted %VcsName to hg.
Defaulted %VcsRepo to <null>.
Resolved %TargetDir as dir: d:\Projects\Active\Libptx\.
Configuration parameters successfully set.
